---
import type { CollectionEntry } from "astro:content";
import BaseHead from "../components/BaseHead.astro";
import Header from "../components/Header.astro";
import FormattedDate from "../components/FormattedDate.astro";
import "../styles/global.css";

type Props = Omit<CollectionEntry<"blog">["data"], "pubDate"> & {
  pubDate?: Date;
};

const {
  title,
  description,
  pubDate,
  updatedDate,
  heroImage,
  tags,
  categories,
} = Astro.props;
---

<html lang="en">
  <head>
    <BaseHead title={title} description={description} />
  </head>

  <body class="bg-background text-foreground min-h-screen">
    <Header />
    <main class="max-w-[1200px] mx-auto py-8 w-[calc(100%-2em)]">
      <article class="pb-8">
        <div class="w-full">
          {
            heroImage && (
              <img
                width={1020}
                height={510}
                src={heroImage}
                alt=""
                class="block mx-auto rounded-xl shadow-lg"
              />
            )
          }
        </div>
        <div class="prose w-[1200] max-w-[calc(100%-2em)] mx-auto p-4">
          {
            pubDate && (
              <div class="mb-6 py-4 text-center leading-none">
                <div class="mb-2">
                  <FormattedDate date={pubDate} />
                  {updatedDate && (
                    <div class="italic">
                      Last updated on <FormattedDate date={updatedDate} />
                    </div>
                  )}
                </div>
                <h1 class="m-0 mb-2">{title}</h1>
                <hr />
                <div class="flex flex-wrap gap-2 justify-end -mt-8">
                  {(tags ?? []).map((tag) => (
                    <span class="bg-muted px-2 py-1 rounded-full">{tag}</span>
                  ))}
                </div>
              </div>
            )
          }
          <slot />
        </div>
      </article>
    </main>
  </body>
</html>
