---
import Layout from "../layouts/BlogPost.astro";
import BaseHead from "../components/BaseHead.astro";
import Header from "../components/Header.astro";
import Paginator from "../components/Paginator.astro";
import BlogFilters from "../components/BlogFilters.astro";
import { SITE_TITLE, SITE_DESCRIPTION } from "../consts";
import BlogCard from "../components/BlogCard.astro";

const query = Astro.url.searchParams.get("q") || "";

let results = [];
if (query) {
  const { origin } = new URL(Astro.request.url);
  const apiUrl = `${origin}/api/search?q=${encodeURIComponent(query)}`;
  const res = await fetch(apiUrl);
  results = await res.json();
}
console.log("[search.astro] QUERY:", query);
console.log("[search.astro] RESULTS LENGTH:", results.length);

const pageParam = Number(Astro.url.searchParams.get("page")) || 1;
const RESULTS_PER_PAGE = 10;
const totalPages = Math.ceil(results.length / RESULTS_PER_PAGE);
const currentPage = Math.max(1, Math.min(pageParam, totalPages || 1));
const paginatedResults = results.slice(
  (currentPage - 1) * RESULTS_PER_PAGE,
  currentPage * RESULTS_PER_PAGE
);

const categoryParam = Astro.url.searchParams.get("category") || "all";
const categories = [
  ...Array.from(
    new Set(
      results
        .flatMap((r: any) => (Array.isArray(r.categories) ? r.categories : []))
        .filter(Boolean)
    )
  ),
] as string[];
if (!categories.includes("all")) categories.unshift("all");
---

<Layout
  title={`Search | ${SITE_TITLE}`}
  description={SITE_DESCRIPTION}
  tags={[]}
  categories={[]}
  draft={false}
>
  <section>
    <div class="max-w-[1200px] mx-auto pt-8 transition-main">
      <div class="mb-8">
        <h1 class="text-3xl font-bold text-foreground mb-2">
          Resultados de búsqueda
        </h1>
        {
          query && (
            <p class="text-muted-foreground">
              Mostrando {paginatedResults.length} resultados para "{query}"
            </p>
          )
        }
      </div>
      <BlogFilters
        categories={categories}
        selectedCategory={categoryParam}
        sortBy={"date-desc"}
        viewMode={"grid"}
        disabled={true}
        getCategoryHref={(cat: string) =>
          `?q=${encodeURIComponent(query)}&category=${encodeURIComponent(cat)}`}
      />
      <div class="max-w-5xl mx-auto px-4 py-8">
        <ul class="grid grid-cols-1 md:grid-cols-2 gap-8 list-none m-0 p-0">
          {
            paginatedResults.length === 0 && query ? (
              <li class="col-span-full text-center py-12">
                <svg
                  class="mx-auto mb-4 text-muted-foreground"
                  width="48"
                  height="48"
                  fill="none"
                  stroke="currentColor"
                  stroke-width="2"
                  viewBox="0 0 24 24"
                >
                  <circle cx="11" cy="11" r="8" />
                  <line x1="21" y1="21" x2="16.65" y2="16.65" />
                </svg>
                <h3 class="font-serif text-xl font-semibold text-foreground mb-2">
                  No se encontraron resultados
                </h3>
                <p class="text-muted-foreground mb-6">
                  Intenta con otros términos de búsqueda o cambia los filtros.
                </p>
                <a
                  href="?category=all"
                  class="px-4 py-2 rounded-md border border-border bg-muted text-muted-foreground hover:bg-primary/10 transition"
                >
                  Ver todos los posts
                </a>
              </li>
            ) : (
              paginatedResults.map((doc: any) => {
                const post = doc.data ? doc : { data: doc };
                return (
                  <li>
                    <BlogCard post={post} variant="grid" />
                  </li>
                );
              })
            )
          }
        </ul>
      </div>
      {
        totalPages > 1 && (
          <Paginator
            currentPage={currentPage}
            totalPages={totalPages}
            getPageHref={(page) =>
              `?q=${encodeURIComponent(query)}&page=${page}`
            }
          />
        )
      }
    </div>
  </section>
</Layout>
