---
import { getCollection } from "astro:content";
import Layout from "../../layouts/BlogLayout.astro";
import {
  getTagCounts,
  getSortedTags,
  getFontSize,
  getCategoryCounts,
  getSortedCategories,
  getRecentTags,
  getTrendingTags,
} from "./tags/tag-utils";
import { Hash, Search, Tag, TrendingUp } from "@lucide/astro";
import { t, tWithInterpolation } from "../../i18n";
import tag from "@lucide/astro/icons/tag";

const { lang: langParam } = Astro.params;
const lang = (langParam ?? "es") as "es" | "en";
const posts = (await getCollection("blog")).filter(
  (p) => !p.data.draft && p.id.startsWith(`${lang}/`)
);
const tagCounts = getTagCounts(posts);
const uniqueTags = getSortedTags(tagCounts);
const minCount = Math.min(...Object.values(tagCounts));
const maxCount = Math.max(...Object.values(tagCounts));

const categoryCounts = getCategoryCounts(posts);
const uniqueCategories = getSortedCategories(categoryCounts);

const query = Astro.url.searchParams.get("q")?.toLowerCase() || "";
const filteredTags = uniqueTags.filter((tag) =>
  tag.toLowerCase().includes(query)
);
const totalTags = uniqueTags.length;
const totalTaggedPosts = Object.values(tagCounts).reduce(
  (acc, n) => acc + n,
  0
);
const trendingTags = getTrendingTags(tagCounts, 8);
const topTags = uniqueTags.slice(0, 5);
const postsWithStringDate = posts.map((post) => ({
  ...post,
  data: {
    ...post.data,
    pubDate:
      post.data.pubDate instanceof Date
        ? post.data.pubDate.toISOString()
        : post.data.pubDate,
  },
}));
const recentTags = getRecentTags(postsWithStringDate, 10);
---

<Layout
  lang={lang}
  frontmatter={{
    title: t(lang, "tags.title"),
    description: t(lang, "tags.description"),
    tags: [],
    categories: [],
    draft: false,
  }}
>
  <section class="container mx-auto px-4 py-8">
    <div class="max-w-6xl mx-auto">
      <!-- Header -->
      <div class="text-center mb-12">
        <div class="flex items-center justify-center gap-3 mb-4">
          <Hash class="h-8 w-8 text-primary" />
          <h2 class="font-serif text-4xl font-bold text-foreground">
            {t(lang as "es" | "en", "menu.tags")}
          </h2>
        </div>
        <p class="text-xl text-muted-foreground max-w-2xl mx-auto">
          {t(lang, "tags.header.description")}
        </p>
      </div>
      <!-- Search -->

      <!-- Tag Cloud Card (Full Width) -->
      <div
        role="region"
        aria-label="nube de etiquetas"
        class="mb-8 bg-card rounded-xl border shadow-soft p-6 w-full"
      >
        <div class="flex items-center gap-2 mb-4">
          <Tag class="h-5 w-5 text-primary" />
          <span class="font-semibold text-lg"
            >{t(lang, "tags.tagCloud.title")}</span
          >
        </div>
        {
          filteredTags.length > 0 ? (
            <div class="flex flex-wrap gap-3 justify-center">
              {filteredTags.map((tag) => (
                <a
                  href={`/${lang}/tags/${encodeURIComponent(tag)}/`}
                  style={`font-size: ${getFontSize(tagCounts[tag], minCount, maxCount)};`}
                  class="inline-block font-medium transition-colors duration-200 cursor-pointer text-foreground hover:text-primary px-2 py-1 rounded bg-muted/50 hover:bg-primary/10"
                  title={tWithInterpolation(lang, "tags.tagCloud.viewTag", {
                    tag,
                  })}
                >
                  <span class="align-middle" aria-label={tag}>
                    #{tag}
                  </span>
                  <span class="text-xs text-muted-foreground ml-1 align-top">
                    ({tagCounts[tag]})
                  </span>
                </a>
              ))}
            </div>
          ) : (
            <div class="text-center py-8">
              <Tag class="h-12 w-12 text-muted-foreground mx-auto mb-4" />
              <p class="text-muted-foreground">
                {t(lang, "tags.tagCloud.noResults")}
              </p>
            </div>
          )
        }
      </div>
      <!-- Masonry Layout for Modules (Below Tag Cloud) -->
      <div
        class="columns-1 md:columns-2 lg:columns-3 xl:columns-4 gap-6 space-y-6"
      >
        <!-- Top Tags Card -->
        <div
          role="region"
          aria-label="etiquetas populares"
          class="break-inside-avoid bg-card rounded-xl border bordershadow-soft p-6"
        >
          <div class="font-semibold text-lg mb-4">
            {t(lang, "tags.topTags.title")}
          </div>
          <div class="space-y-3">
            {
              topTags.map((tag, index) => (
                <a
                  href={`/${lang}/tags/${encodeURIComponent(tag)}/`}
                  class="flex items-center justify-between p-2 rounded-lg hover:bg-secondary/50 transition-colors"
                >
                  <div class="flex items-center gap-2">
                    <span class="text-xs font-bold text-primary bg-primary/10 w-6 h-6 rounded-full flex items-center justify-center">
                      {index + 1}
                    </span>
                    <span class="font-medium text-foreground" aria-label={tag}>
                      #{tag}
                    </span>
                  </div>
                  <span class="text-xs text-muted-foreground">
                    {tagCounts[tag]}
                  </span>
                </a>
              ))
            }
          </div>
        </div>
        <!-- Trending Tags Card -->
        <div
          role="region"
          aria-label="tendencias"
          class="break-inside-avoid bg-card rounded-xl border bordershadow-soft p-6"
        >
          <div class="flex items-center gap-2 mb-4">
            <TrendingUp class="h-4 w-4 text-green-500" />
            <span class="font-semibold text-lg"
              >{t(lang, "tags.trending.title")}</span
            >
          </div>
          <div class="space-y-2">
            {
              trendingTags.map((tag) => (
                <a
                  href={`/${lang}/tags/${encodeURIComponent(tag)}/`}
                  class="flex items-center justify-between p-2 rounded-lg hover:bg-secondary/50 transition-colors"
                >
                  <span
                    class="text-sm font-medium text-foreground"
                    aria-label={tag}
                  >
                    #{tag}
                  </span>
                  <div class="flex items-center gap-1">
                    <TrendingUp class="h-3 w-3 text-green-500" />
                    <span class="text-xs text-muted-foreground">
                      {tagCounts[tag]}
                    </span>
                  </div>
                </a>
              ))
            }
          </div>
        </div>
        <!-- Stats Card -->
        <div
          role="region"
          aria-label="estadísticas"
          class="break-inside-avoid bg-card rounded-xl border bordershadow-soft p-6 flex flex-col gap-4"
        >
          <div class="font-semibold text-lg mb-4">
            {t(lang, "tags.stats.title")}
          </div>
          <div class="flex justify-between">
            <span class="text-sm text-muted-foreground"
              >{t(lang, "tags.stats.totalTags")}</span
            >
            <span class="font-medium text-foreground" aria-label="quantity"
              >{totalTags}</span
            >
          </div>
          <div class="flex justify-between">
            <span class="text-sm text-muted-foreground"
              >{t(lang, "tags.stats.taggedPosts")}</span
            >
            <span class="font-medium text-foreground" aria-label="quantity"
              >{totalTaggedPosts}</span
            >
          </div>
          <div class="flex justify-between">
            <span class="text-sm text-muted-foreground"
              >{t(lang, "tags.stats.trending")}</span
            >
            <span class="font-medium text-foreground" aria-label="quantity"
              >{trendingTags.length}</span
            >
          </div>
        </div>
        <!-- Recent Tags Card -->
        <div
          role="region"
          aria-label="etiquetas recientes"
          class="break-inside-avoid bg-card rounded-xl border borderbordershadow-soft p-6"
        >
          <div class="font-semibold text-lg mb-4">
            {t(lang, "tags.recentTags.title")}
          </div>
          <div class="flex flex-wrap gap-2">
            {
              recentTags.map((tag) => (
                <a
                  href={`/${lang}/tags/${encodeURIComponent(tag)}/`}
                  class="inline-block px-2 py-1 rounded bg-muted/50 hover:bg-primary/10 text-xs font-medium text-foreground hover:text-primary transition-colors"
                >
                  <span aria-label={tag}>#{tag}</span>
                </a>
              ))
            }
          </div>
        </div>
        <!-- Categories Card -->
        <div
          role="region"
          aria-label="categorías"
          class="break-inside-avoid bg-card rounded-xl border bordershadow-soft p-6"
        >
          <div class="font-semibold text-lg mb-4">
            {t(lang, "tags.categories.title")}
          </div>
          <div class="space-y-2">
            {
              uniqueCategories.map((category) => (
                <a
                  href={`/search?q=${encodeURIComponent(category)}`}
                  class="block p-2 rounded-lg hover:bg-secondary/50 transition-colors"
                >
                  <span
                    class="text-sm font-medium text-foreground"
                    aria-label={category}
                  >
                    {category}
                  </span>
                  <span class="text-xs text-muted-foreground ml-2">
                    ({categoryCounts[category]}{" "}
                    {t(lang, "tags.categories.posts")})
                  </span>
                </a>
              ))
            }
          </div>
        </div>
      </div>
    </div>
  </section>
</Layout>
