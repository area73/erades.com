---
import { type CollectionEntry, getCollection } from "astro:content";
import BlogPost from "../../layouts/BlogPost.astro";
import { render } from "astro:content";

export const prerender = true;

export async function getStaticPaths() {
  const posts = await getCollection("blog");
  // Log temporal para depuraci칩n
  console.log(
    "[getStaticPaths] blog posts ids:",
    posts.map((post) => post.id)
  );
  return posts.map((post) => ({
    params: { slug: post.id },
    props: post,
  }));
}
type Props = CollectionEntry<"blog">;

const post = Astro.props;
let Content, pubDate, updatedDate, dataWithDates;
if (post && post.data) {
  ({ Content } = await render(post));
  pubDate = post.data.pubDate ? new Date(post.data.pubDate) : undefined;
  updatedDate = post.data.updatedDate
    ? new Date(post.data.updatedDate)
    : undefined;
  dataWithDates = {
    ...post.data,
    pubDate,
    ...(updatedDate ? { updatedDate } : {}),
  };
}
---

{
  !post || !post.data ? (
    <html lang="es">
      <body>
        <main class="max-w-2xl mx-auto pt-16 px-4 text-center">
          <h1 class="text-3xl font-bold mb-4">Post no encontrado</h1>
          <p class="text-muted-foreground">
            No se encontr칩 el post solicitado. Verifica la URL o vuelve al{" "}
            <a href="/blog/" class="text-primary underline">
              listado de posts
            </a>
            .
          </p>
        </main>
      </body>
    </html>
  ) : !pubDate ? (
    <html lang="es">
      <body>
        <main class="max-w-2xl mx-auto pt-16 px-4 text-center">
          <h1 class="text-3xl font-bold mb-4">Post inv치lido</h1>
          <p class="text-muted-foreground">
            El post no tiene fecha de publicaci칩n. Vuelve al{" "}
            <a href="/blog/" class="text-primary underline">
              listado de posts
            </a>
            .
          </p>
        </main>
      </body>
    </html>
  ) : (
    <BlogPost
      title={dataWithDates.title}
      description={dataWithDates.description}
      pubDate={dataWithDates.pubDate}
      tags={dataWithDates.tags}
      categories={dataWithDates.categories}
      draft={dataWithDates.draft}
      updatedDate={dataWithDates.updatedDate}
      heroImage={dataWithDates.heroImage}
    >
      {Content ? <Content /> : null}
    </BlogPost>
  )
}
