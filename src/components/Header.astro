---
import HeaderLink from "./HeaderLink.astro";
import HeaderSearchBox from "./HeaderSearchBox.astro";
import { ChevronDown } from "@lucide/astro";
import ThemeToggle from "./ThemeToggle.astro";
import SocialProfileMenu from "./SocialProfileMenu.astro";
import { t } from "../i18n";

interface Props {
  lang: string;
}
const { lang } = Astro.props;

let isDark = false;
if (typeof window !== "undefined") {
  isDark = window.document.documentElement.classList.contains("dark");
}
---

<header
  aria-label="header"
  class="w-full sticky top-0 z-40 bg-header-background border-b border-header-border shadow-[0_2px_8px_rgba(0,0,0,0.04)] backdrop-blur supports-[backdrop-filter]:bg-header-background/80"
>
  <div
    class="max-w-[1440px] mx-auto w-full flex items-center justify-between px-6 py-4"
  >
    <div class="flex items-center gap-6 min-w-0">
      <a
        href="/"
        class="flex items-center gap-2 font-bold text-lg whitespace-nowrap"
      >
        <img
          src="/area73-small.png"
          alt={t(lang as "en" | "es", "logo.alt")}
          class="h-12 w-12 object-contain"
        />
      </a>
    </div>
    <nav
      class="flex items-center gap-6 text-[16px] font-medium font-[Inter] text-muted-foreground"
    >
      <HeaderLink
        href={`/${lang}`}
        aria-label={t(lang as "en" | "es", "menu.home")}
        lang={lang}
      >
        {t(lang as "en" | "es", "menu.home")}
      </HeaderLink>
      <HeaderLink
        href={`/${lang}/blog`}
        aria-label={t(lang as "en" | "es", "menu.blog")}
        lang={lang}
      >
        {t(lang as "en" | "es", "menu.blog")}
      </HeaderLink>
      <HeaderLink
        href={`/${lang}/about`}
        aria-label={t(lang as "en" | "es", "menu.about")}
        lang={lang}
      >
        {t(lang as "en" | "es", "menu.about")}
      </HeaderLink>
      <HeaderLink
        href={`/${lang}/tags`}
        aria-label={t(lang as "en" | "es", "menu.tags")}
        lang={lang}
      >
        {t(lang as "en" | "es", "menu.tags")}
      </HeaderLink>
    </nav>
    <div class="flex items-center gap-6 min-w-0">
      <div class="hidden md:block">
        <div class="w-[420px] max-w-full">
          <HeaderSearchBox lang={lang} />
        </div>
      </div>
      <div class="flex items-center gap-4">
        <ThemeToggle />
        <div class="flex items-center gap-1 ml-2">
          <button
            id="lang-es"
            class={"px-2 py-1 rounded text-xs font-bold transition " +
              (lang === "es"
                ? "bg-primary text-primary-foreground"
                : "bg-muted text-muted-foreground hover:bg-accent")}
            aria-current={lang === "es" ? "page" : undefined}
          >
            ES
          </button>
          <button
            id="lang-en"
            class={"px-2 py-1 rounded text-xs font-bold transition " +
              (lang === "en"
                ? "bg-primary text-primary-foreground"
                : "bg-muted text-muted-foreground hover:bg-accent")}
            aria-current={lang === "en" ? "page" : undefined}
          >
            EN
          </button>
          <script is:inline>
            if (typeof window !== "undefined") {
              document
                .getElementById("lang-es")
                ?.addEventListener("click", () => {
                  document.cookie =
                    "lang=es; path=/; max-age=" + 60 * 60 * 24 * 365;
                  window.location.pathname = window.location.pathname.replace(
                    /^\/(en|es)/,
                    "/es"
                  );
                });
              document
                .getElementById("lang-en")
                ?.addEventListener("click", () => {
                  document.cookie =
                    "lang=en; path=/; max-age=" + 60 * 60 * 24 * 365;
                  localStorage.removeItem("lang");
                  window.location.pathname = window.location.pathname.replace(
                    /^\/(en|es)/,
                    "/en"
                  );
                });
            }
          </script>
          <div class="relative ml-2">
            <button
              id="avatar-btn"
              type="button"
              class="flex items-center rounded-full border bg-card p-1 focus:outline-none"
              aria-haspopup="true"
              aria-expanded="false"
            >
              <img
                src="/avatar.png"
                alt={t(lang as "en" | "es", "avatar.alt")}
                class="h-8 w-8 rounded-full object-cover"
              />
              <ChevronDown class="ml-2 h-4 w-4 text-muted-foreground" />
            </button>
            <SocialProfileMenu
              name="Rodrigo Erades"
              email="rerades@siete3.com"
              linkedinUrl="https://linkedin.com/"
              xUrl="https://x.com/"
              lang={lang}
            />
            <script is:inline>
              if (typeof window !== "undefined") {
                const btn = document.getElementById("avatar-btn");
                const menu = document.getElementById("avatar-menu");
                let open = false;
                const toggleMenu = (show) => {
                  open = typeof show === "boolean" ? show : !open;
                  menu.classList.toggle("hidden", !open);
                  btn.setAttribute("aria-expanded", open ? "true" : "false");
                };
                btn.addEventListener("click", (e) => {
                  e.stopPropagation();
                  toggleMenu();
                });
                document.addEventListener("click", (e) => {
                  if (
                    open &&
                    !btn.contains(e.target) &&
                    !menu.contains(e.target)
                  ) {
                    toggleMenu(false);
                  }
                });
                document.addEventListener("keydown", (e) => {
                  if (open && e.key === "Escape") toggleMenu(false);
                });
              }
            </script>
          </div>
        </div>
      </div>
    </div>
  </div>
</header>
