---
interface Props {
  /** Página actual (1-indexed) */
  currentPage: number;
  /** Número total de páginas */
  totalPages: number;
  /** Función para generar la URL de cada página */
  getPageHref?: (page: number) => string;
  /** Texto para el botón anterior */
  prevLabel?: string;
  /** Texto para el botón siguiente */
  nextLabel?: string;
  /** Si deshabilitar los enlaces cuando no son navegables */
  disableInactive?: boolean;
  /** Clase adicional para el contenedor */
  customClass?: string;
  /** Etiqueta ARIA para describir el propósito de la paginación */
  ariaLabel?: string;
}
const {
  currentPage,
  totalPages,
  getPageHref = (page) => (page === 1 ? "/blog/" : `/blog/${page}/`),
  prevLabel = "Anterior",
  nextLabel = "Siguiente",
  customClass,
  ariaLabel = "Navegación de páginas",
} = Astro.props as Props;
---

{
  totalPages > 1 && (
    <nav
      aria-label={ariaLabel}
      role="navigation"
      class={`flex justify-center mt-12${customClass ? ` ${customClass}` : ""}`}
    >
      <div
        class="flex gap-2"
        role="group"
        aria-label="Navegación de paginación"
      >
        {currentPage === 1 ? (
          <span
            class="inline-flex items-center px-3 py-1 rounded border bg-secondary text-secondary-foreground text-sm font-medium opacity-50 cursor-not-allowed"
            aria-label={`${prevLabel} (página no disponible)`}
            aria-disabled="true"
          >
            {prevLabel}
          </span>
        ) : (
          <a
            href={getPageHref(currentPage - 1)}
            class="inline-flex items-center px-3 py-1 rounded border bg-card text-foreground text-sm font-medium hover:bg-primary/10"
            aria-label={`${prevLabel}, ir a página ${currentPage - 1}`}
          >
            {prevLabel}
          </a>
        )}
        {Array.from({ length: totalPages }).map((_, i) => {
          const pageNumber = i + 1;
          const isCurrentPage = pageNumber === currentPage;
          return (
            <a
              href={getPageHref(pageNumber)}
              class={`inline-flex items-center px-3 py-1 rounded border text-sm font-medium ${
                isCurrentPage
                  ? "bg-primary text-primary-foreground border-primary"
                  : "bg-card text-foreground hover:bg-primary/10"
              }`}
              aria-label={`Ir a página ${pageNumber}`}
              aria-current={isCurrentPage ? "page" : undefined}
              aria-setsize={totalPages}
              aria-posinset={pageNumber}
            >
              {pageNumber}
            </a>
          );
        })}
        {currentPage === totalPages ? (
          <span
            class="inline-flex items-center px-3 py-1 rounded border bg-secondary text-secondary-foreground text-sm font-medium opacity-50 cursor-not-allowed"
            aria-label={`${nextLabel} (página no disponible)`}
            aria-disabled="true"
          >
            {nextLabel}
          </span>
        ) : (
          <a
            href={getPageHref(currentPage + 1)}
            class="inline-flex items-center px-3 py-1 rounded border bg-card text-foreground text-sm font-medium hover:bg-primary/10"
            aria-label={`${nextLabel}, ir a página ${currentPage + 1}`}
          >
            {nextLabel}
          </a>
        )}
      </div>
      <div class="sr-only" aria-live="polite">
        Página {currentPage} de {totalPages}
      </div>
    </nav>
  )
}
