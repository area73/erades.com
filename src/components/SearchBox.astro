---
interface Props {
  results?: any[];
  query?: string;
  categories?: string[];
  selectedCategory?: string;
  onCategoryChange?: (cat: string) => void;
}

const {
  results = [],
  query = "",
  categories = [],
  selectedCategory = "all",
  onCategoryChange,
} = Astro.props;

function handleCategoryClick(cat: string) {
  if (typeof onCategoryChange === "function") {
    onCategoryChange(cat);
  }
}
---

<div class="max-w-5xl mx-auto px-4 py-8" id="search-container">
  <!-- Cabecera de resultados -->
  <div class="mb-8">
    <h1 class="text-3xl font-bold text-foreground mb-2">
      Resultados de búsqueda
    </h1>
    {query && (
      <p class="text-muted-foreground" id="results-count">
        Mostrando {results.length} resultados para "{query}"
      </p>
    )}
  </div>

  <!-- Filtros de categoría -->
  <div class="flex flex-wrap gap-2 mb-8 items-center">
    <svg
      class="h-4 w-4 text-muted-foreground mr-2"
      fill="none"
      stroke="currentColor"
      stroke-width="2"
      viewBox="0 0 24 24"
    >
      <polygon points="22 3 2 3 10 13 10 19 14 21 14 13 22 3" />
    </svg>
    <span class="text-base text-muted-foreground mr-2 font-[Inter]">
      Filtrar por categoría:
    </span>
    <a
      href="?category=all"
      class={`px-3 py-1 rounded-full text-sm font-medium border transition-colors duration-150 ${selectedCategory === "all" ? "bg-primary text-primary-foreground border-primary" : "bg-muted text-muted-foreground border-border hover:bg-primary/10"}`}
    >
      Todas
    </a>
    {categories.map((cat) => (
      <a
        href={`?category=${encodeURIComponent(cat)}`}
        class={`px-3 py-1 rounded-full text-sm font-medium border transition-colors duration-150 ${selectedCategory === cat ? "bg-primary text-primary-foreground border-primary" : "bg-muted text-muted-foreground border-border hover:bg-primary/10"}`}
      >
        {cat}
      </a>
    ))}
  </div>

  <!-- Resultados -->
  <ul class="grid grid-cols-1 md:grid-cols-2 gap-8 list-none m-0 p-0" id="results-list">
    {results.length === 0 && query ? (
      <li class="col-span-full text-center py-12">
        <svg
          class="mx-auto mb-4 text-muted-foreground"
          width="48"
          height="48"
          fill="none"
          stroke="currentColor"
          stroke-width="2"
          viewBox="0 0 24 24"
        >
          <circle cx="11" cy="11" r="8" />
          <line x1="21" y1="21" x2="16.65" y2="16.65" />
        </svg>
        <h3 class="font-serif text-xl font-semibold text-foreground mb-2">
          No se encontraron resultados
        </h3>
        <p class="text-muted-foreground mb-6">
          Intenta con otros términos de búsqueda o cambia los filtros.
        </p>
        <a
          href="?category=all"
          class="px-4 py-2 rounded-md border border-border bg-muted text-muted-foreground hover:bg-primary/10 transition"
        >
          Ver todos los posts
        </a>
      </li>
    ) : (
      results.map((doc) => (
        <li class="bg-card rounded-xl shadow-soft hover:shadow-medium transition-shadow duration-300 overflow-hidden">
          <a href={doc.path} class="block group p-6 h-full">
            {doc.heroImage && (
              <img
                width="100%"
                src={doc.heroImage}
                alt=""
                class="mb-2 rounded-xl group-hover:shadow-lg transition-all aspect-video object-cover"
              />
            )}
            <div class="flex flex-col h-full">
              <!-- Metadatos superiores -->
              <div class="flex flex-wrap items-center gap-3 mb-3 text-xs text-muted-foreground">
                {doc.date && (
                  <span class="flex items-center gap-1">
                    <svg
                      class="h-3 w-3"
                      fill="none"
                      stroke="currentColor"
                      stroke-width="2"
                      viewBox="0 0 24 24"
                    >
                      <circle cx="12" cy="12" r="10" />
                      <path d="M12 6v6l4 2" />
                    </svg>
                    {doc.date}
                  </span>
                )}
                {doc.author && (
                  <span class="flex items-center gap-1">
                    <svg
                      class="h-3 w-3"
                      fill="none"
                      stroke="currentColor"
                      stroke-width="2"
                      viewBox="0 0 24 24"
                    >
                      <circle cx="12" cy="7" r="4" />
                      <path d="M5.5 21a8.38 8.38 0 0 1 13 0" />
                    </svg>
                    {doc.author}
                  </span>
                )}
                {doc.readTime && (
                  <span class="flex items-center gap-1">
                    <svg
                      class="h-3 w-3"
                      fill="none"
                      stroke="currentColor"
                      stroke-width="2"
                      viewBox="0 0 24 24"
                    >
                      <circle cx="12" cy="12" r="10" />
                      <path d="M12 6v6l4 2" />
                    </svg>
                    {doc.readTime}
                  </span>
                )}
                {doc.category && (
                  <span class="inline-block px-2 py-0.5 rounded bg-secondary text-secondary-foreground font-semibold">
                    {doc.category}
                  </span>
                )}
              </div>
              <!-- Título y extracto -->
              <div class="flex-1 mb-4">
                <h4 class="m-0 text-lg font-bold text-foreground leading-tight group-hover:text-primary transition-colors duration-200 mb-1">
                  {doc.title}
                </h4>
                <p class="m-0 text-muted-foreground line-clamp-2">
                  {doc.description}
                </p>
              </div>
              <!-- Tags -->
              {doc.tags && Array.isArray(doc.tags) && doc.tags.length > 0 && (
                <div class="flex flex-wrap gap-2 mt-auto">
                  {(doc.tags as string[]).map((tag: string) => (
                    <span class="inline-flex items-center px-2 py-0.5 rounded bg-muted text-xs text-muted-foreground border border-border">
                      <svg
                        class="h-3 w-3 mr-1"
                        fill="none"
                        stroke="currentColor"
                        stroke-width="2"
                        viewBox="0 0 24 24"
                      >
                        <circle cx="12" cy="12" r="10" />
                        <path d="M7 12l5 5 5-5" />
                      </svg>
                      {tag}
                    </span>
                  ))}
                </div>
              )}
            </div>
          </a>
        </li>
      ))
    )}
  </ul>
</div>
