---
interface Props {
  results?: any[];
  query?: string;
}

const { results = [], query = "" } = Astro.props;
---

<div class="max-w-5xl mx-auto px-4 py-8" id="search-container">
  <!-- Cabecera de resultados -->
  <div class="mb-8">
    <h1 class="text-3xl font-bold text-foreground mb-2">
      Resultados de búsqueda
    </h1>
    <p class="text-muted-foreground" id="results-count">
      {query ? `Mostrando ${results.length} resultados para "${query}"` : ""}
    </p>
  </div>

  <!-- Resultados -->
  <ul
    class="grid grid-cols-1 md:grid-cols-2 gap-8 list-none m-0 p-0"
    id="results-list"
  >
    {
      results.length === 0 && query && (
        <li class="col-span-full text-center py-12">
          <svg
            class="mx-auto mb-4 text-muted-foreground"
            width="48"
            height="48"
            fill="none"
            stroke="currentColor"
            stroke-width="2"
            viewBox="0 0 24 24"
          >
            <circle cx="11" cy="11" r="8" />
            <line x1="21" y1="21" x2="16.65" y2="16.65" />
          </svg>
          <h3 class="font-serif text-xl font-semibold text-foreground mb-2">
            No se encontraron resultados
          </h3>
          <p class="text-muted-foreground mb-6">
            Intenta con otros términos de búsqueda.
          </p>
        </li>
      )
    }
    {
      results.map((doc) => (
        <li class="bg-card rounded-xl shadow-soft hover:shadow-medium transition-shadow duration-300 overflow-hidden">
          <a href={doc.path} class="block group p-6 h-full">
            {doc.heroImage && (
              <img
                width="100%"
                src={doc.heroImage}
                alt=""
                class="mb-2 rounded-xl group-hover:shadow-lg transition-all aspect-video object-cover"
              />
            )}
            <div class="flex flex-col h-full">
              <div class="flex flex-wrap items-center gap-3 mb-3 text-xs text-muted-foreground">
                <span>{doc.title}</span>
              </div>
              <div class="flex-1 mb-4">
                <h4 class="m-0 text-lg font-bold text-foreground leading-tight group-hover:text-primary transition-colors duration-200 mb-1">
                  {doc.title}
                </h4>
                <p class="m-0 text-muted-foreground line-clamp-2">
                  {doc.description}
                </p>
              </div>
              {doc.tags && Array.isArray(doc.tags) && doc.tags.length > 0 && (
                <div class="flex flex-wrap gap-2 mt-auto">
                  {(doc.tags as string[]).map((tag: string) => (
                    <span class="inline-flex items-center px-2 py-0.5 rounded bg-muted text-xs text-muted-foreground border border-border">
                      {tag}
                    </span>
                  ))}
                </div>
              )}
            </div>
          </a>
        </li>
      ))
    }
  </ul>
</div>
