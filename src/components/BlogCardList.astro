---
import FormattedDate from "./FormattedDate.astro";
interface Props {
  post: any;
}
const { post } = Astro.props;

const href = post.data?.path || (post.id ? `/blog/${post.id}/` : "#");
---

<a href={href} class="block group">
  <div
    class="rounded-xl overflow-hidden shadow-sm bg-card border border-border hover:shadow-medium transition-all duration-300"
  >
    <div class="grid md:grid-cols-4 gap-6">
      <div class="md:col-span-1">
        <div
          class="aspect-video bg-gradient-to-br from-primary/10 to-accent rounded-lg overflow-hidden"
        >
          <img
            src={post.data.heroImage}
            alt={post.data.title}
            class="w-full h-full object-cover group-hover:scale-105 transition-transform duration-300"
          />
        </div>
      </div>
      <div class="md:col-span-3 flex flex-col h-full">
        <div class="flex items-start justify-between">
          <span
            class="inline-block my-2 p-2 py-1 rounded bg-secondary text-xs text-secondary-foreground font-medium"
          >
            {
              (post.data.categories && post.data.categories[0]) ||
                "Sin categor√≠a"
            }
          </span>
          <div
            class="flex items-center gap-3 text-xs text-muted-foreground m-2"
          >
            <span>
              <FormattedDate
                date={post.data.pubDate
                  ? new Date(post.data.pubDate)
                  : new Date(0)}
              />
            </span>
          </div>
        </div>
        <h3
          class="font-serif text-xl font-semibold text-foreground group-hover:text-primary transition-colors"
        >
          {post.data.title}
        </h3>
        <p class="text-muted-foreground mb-4 line-clamp-2 flex-1">
          {post.data.excerpt || post.data.description || ""}
        </p>
        <div class="flex items-center justify-between mt-auto">
          <div class="flex items-center gap-1 text-xs text-muted-foreground">
            <span class="font-medium">{post.data.author || ""}</span>
          </div>
        </div>
        {
          Array.isArray(post.data.tags) && post.data.tags.length > 0 && (
            <div class="flex flex-wrap justify-end gap-2 pb-2 pr-2">
              {post.data.tags.map((tag: string) => (
                <span class="inline-flex items-center px-2 py-0.5 rounded bg-muted text-xs text-muted-foreground border border-border">
                  #{tag}
                </span>
              ))}
            </div>
          )
        }
      </div>
    </div>
  </div>
</a>
